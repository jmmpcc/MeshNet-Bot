name: Build & Push Docker images to GHCR

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ghcr.io/${{ github.repository_owner }}
  IMAGE_PREFIX: meshnet-bot

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          # Ajusta dockerfile/context según tu repo
          - name: broker
            dockerfile: Dockerfile
            context: .
            build-args: |
              TARGET=broker
          - name: bot
            dockerfile: Dockerfile
            context: .
            build-args: |
              TARGET=bot
          - name: aprs
            dockerfile: Dockerfile.aprs
            context: .
            build-args: ""
          - name: bridge
            dockerfile: Dockerfile.bridge
            context: .
            build-args: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_PREFIX }}-${{ matrix.target.name }}
          tags: |
            # Tags semver si la referencia es un tag vX.Y.Z
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # rama por defecto → edge + latest
            type=raw,value=edge,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            # trazabilidad siempre
            type=sha,format=short
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_PREFIX }}-${{ matrix.target.name }}
            org.opencontainers.image.description=MeshNet 'The Boss' component (${{ matrix.target.name }})
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.target.context }}
          file: ${{ matrix.target.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: ${{ matrix.target.build-args }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
